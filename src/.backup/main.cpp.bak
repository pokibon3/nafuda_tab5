// clang-format off
//#define IV_FS_SD
//#define SD_FREQUENCY      15000000
//#define SD_MOUNT_RETRY    5
//#define SD_MOUNT_DELAY_MS 500
//#define TARGET_SPI        SPI
//#include <SPI.h>
//#include <SD.h>
#include <LittleFS.h>
//#define IV_FS LittleFS

//#define SD_SPI_CS_PIN   42
//#define SD_SPI_SCK_PIN  43
//#define SD_SPI_MOSI_PIN 44
//#define SD_SPI_MISO_PIN 39

//#define FORMAT_FS_IF_FAILED true
//inline bool IVS_FS_BEGIN() {
//    return IV_FS.begin(FORMAT_FS_IF_FAILED);
//}  
//#include "main.hpp"
// clang-format on
#include <M5Unified.h>
//#include <M5GFX.h>
//M5GFX display;
/*
inline bool IVS_FS_BEGIN() {
    M5.Lcd.print("Mounting SD Card ...");
    TARGET_SPI.begin(M5.getPin(m5::pin_name_t::sd_spi_sclk),
                     M5.getPin(m5::pin_name_t::sd_spi_miso),
                     M5.getPin(m5::pin_name_t::sd_spi_mosi),
                     M5.getPin(m5::pin_name_t::sd_spi_ss));
    uint8_t retry = 0;
    for (retry = 0; retry < SD_MOUNT_RETRY; ++retry) {
        if (IV_FS.begin(M5.getPin(m5::pin_name_t::sd_spi_ss), TARGET_SPI,
                        SD_FREQUENCY)) {
            break;
        }
        delay(SD_MOUNT_DELAY_MS);
        M5.Lcd.print(".");
    }
    const bool succeeded = (retry < SD_MOUNT_RETRY);
    M5.Lcd.println(succeeded ? " Done." : " Failed.");
    delay(500);
    M5.Lcd.clear();
    return succeeded;
}
*/
void setup(void) {
    auto cfg = M5.config();
    cfg.serial_baudrate = 115200;
    M5.begin(cfg);
//    M5_BEGIN();
//    Serial.begin(115200);
//    display.begin();
    M5.Lcd.setRotation(2);
    M5.Lcd.setTextColor(WHITE);
    M5.Lcd.setTextSize(3);
    M5.Lcd.fillScreen(BLACK);

    // LittleFSの初期化
    if (!LittleFS.begin()) {
        M5.Lcd.println("LittleFS Mount Failed");
        return;
    }

   // SDカードの初期化
//   SPI.begin(SD_SPI_SCK_PIN, SD_SPI_MISO_PIN, SD_SPI_MOSI_PIN, SD_SPI_CS_PIN);
//    if (!SD.begin(SD_SPI_CS_PIN, SPI, 15000000)) {
//        // Print a message if SD card initialization failed or if the SD card does not exist.
//        M5.Display.print("\n SD card not detected\n");
//        delay(500);
//    }
//    if (!IVS_FS_BEGIN()) {
//        M5.Lcd.println("SD Card Initialization failed!");
//        while (true);
//    }
//    if (!SD.begin(GPIO_NUM_42, SPI, 15000000) { // GPIO4はCSピンの例
//    while (false == SD.begin(GPIO_NUM_42, SPI, 15000000UL)) { // GPIO4はCSピンの例
//        M5.Lcd.println("SD Card Initialization failed!");
//        delay(500);
//    } 
/*
File file = SD.open("/sample.txt");
    if (!file) {
      M5.Lcd.println("Failed to open file!");
      return;
    }

    while (file.available()) {
      char c = file.read();
      M5.Lcd.print(c);
    }

    file.close();   
    // BMP画像の表示
    if (!M5.Lcd.drawBmpFile("/image.bmp", 0, 0, M5.Display.width() / 2,
                            M5.Display.height() / 2, 0, 0, 0.5F, 0.5F,
                            middle_center)) {
      M5.Lcd.println("Image display failed!");
    }
*/
    File file = LittleFS.open("/sample.txt");
    if (!file) {
      M5.Lcd.println("Failed to open file!");
      return;
    }

    while (file.available()) {
      char c = file.read();
      M5.Lcd.print(c);
    }

    file.close();   
    // BMP画像の表示
    if (!M5.Lcd.drawJpgFile(LittleFS, "/image.jpg", 0, 0, M5.Display.width(),
                            M5.Display.height(), 0, 0, 0.0F, 0.0F,
                            middle_center)) {
      M5.Lcd.println("Image display failed!");
    }
}
 
void loop(void) {
    delay(1);
//    M5_UPDATE();
}
